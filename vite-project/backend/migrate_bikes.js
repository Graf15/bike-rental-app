import pool from './db.js';

async function migrateBikesTable() {
    const client = await pool.connect();
    
    try {
        console.log('–ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü—ã bikes...');
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã bikes —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        const createBikesQuery = `
            CREATE TABLE IF NOT EXISTS bikes (
                id SERIAL PRIMARY KEY,
                model VARCHAR(300) NOT NULL,
                internal_article VARCHAR(100) UNIQUE,
                brand_id INTEGER REFERENCES brands(id),
                purchase_price_usd DECIMAL(10, 2),
                purchase_price_uah DECIMAL(10, 2),
                purchase_date DATE,
                model_year INTEGER,
                wheel_size VARCHAR(20),
                frame_size VARCHAR(20),
                gender VARCHAR(20),
                price_segment VARCHAR(50),
                supplier_article VARCHAR(100),
                supplier_website_link VARCHAR(500),
                photos JSONB DEFAULT '{}',
                last_maintenance_date DATE,
                condition_status VARCHAR(50),
                notes TEXT,
                has_documents BOOLEAN DEFAULT false,
                document_details JSONB DEFAULT '{}',
                installed_components JSONB DEFAULT '{}',
                created_by INTEGER REFERENCES users(id),
                updated_by INTEGER REFERENCES users(id),
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        `;
        
        await client.query(createBikesQuery);
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ bikes —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        const createIndexesQuery = `
            CREATE INDEX IF NOT EXISTS idx_bikes_brand_id ON bikes(brand_id);
            CREATE INDEX IF NOT EXISTS idx_bikes_internal_article ON bikes(internal_article);
            CREATE INDEX IF NOT EXISTS idx_bikes_condition_status ON bikes(condition_status);
            CREATE INDEX IF NOT EXISTS idx_bikes_photos ON bikes USING GIN(photos);
            CREATE INDEX IF NOT EXISTS idx_bikes_document_details ON bikes USING GIN(document_details);
            CREATE INDEX IF NOT EXISTS idx_bikes_installed_components ON bikes USING GIN(installed_components);
        `;
        
        await client.query(createIndexesQuery);
        console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
        // –û—á–∏—Å—Ç–∫–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        const clearDemoDataQuery = `
            DELETE FROM maintenance_events;
            DELETE FROM weekly_repair_schedule;
            DELETE FROM bike_status_history;
        `;
        
        await client.query(clearDemoDataQuery);
        console.log('‚úÖ –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã –∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü');

        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        const restoreForeignKeysQuery = `
            ALTER TABLE maintenance_events 
            ADD CONSTRAINT maintenance_events_bike_id_fkey 
            FOREIGN KEY (bike_id) REFERENCES bikes(id);
            
            ALTER TABLE weekly_repair_schedule 
            ADD CONSTRAINT weekly_repair_schedule_bike_id_fkey 
            FOREIGN KEY (bike_id) REFERENCES bikes(id);
            
            ALTER TABLE bike_status_history 
            ADD CONSTRAINT bike_status_history_bike_id_fkey 
            FOREIGN KEY (bike_id) REFERENCES bikes(id);
        `;
        
        await client.query(restoreForeignKeysQuery);
        console.log('‚úÖ –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –±—Ä–µ–Ω–¥–æ–≤ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã)
        const insertBrandsQuery = `
            INSERT INTO brands (name, country, description) VALUES 
            ('Trek', 'USA', '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤'),
            ('Specialized', 'USA', '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥ –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤'),
            ('Giant', 'Taiwan', '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤ –≤ –º–∏—Ä–µ'),
            ('Cannondale', 'USA', '–í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã'),
            ('Scott', 'Switzerland', '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤')
            ON CONFLICT (name) DO NOTHING;
        `;
        
        await client.query(insertBrandsQuery);
        console.log('‚úÖ –ü—Ä–∏–º–µ—Ä—ã –±—Ä–µ–Ω–¥–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã)
        const insertCurrencyRatesQuery = `
            INSERT INTO currency_rates (currency_code, rate_to_usd, date) VALUES 
            ('USD', 1.000000, CURRENT_DATE),
            ('EUR', 0.850000, CURRENT_DATE),
            ('RUB', 0.011000, CURRENT_DATE),
            ('UAH', 0.025000, CURRENT_DATE)
            ON CONFLICT (currency_code, date) DO NOTHING;
        `;
        
        await client.query(insertCurrencyRatesQuery);
        console.log('‚úÖ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã');
        
        console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        throw error;
    } finally {
        client.release();
    }
}

// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏
migrateBikesTable()
    .then(() => {
        console.log('–ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        process.exit(0);
    })
    .catch((error) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        process.exit(1);
    });