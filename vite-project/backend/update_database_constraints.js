// update_database_constraints.js - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
import pkg from 'pg';
const { Pool } = pkg;

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á—Ç–æ –∏ –≤ db.js
const pool = new Pool({
  user: 'postgres',
  host: 'localhost', 
  database: 'bikerental',
  password: '1515',
  port: 5432,
});

async function updateDatabaseConstraints() {
  const client = await pool.connect();
  
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∏–Ω–¥–µ–∫—Å
    console.log('üìù –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞...');
    await client.query(`
      DROP INDEX IF EXISTS idx_unique_active_repair_per_bike;
    `);
    
    // 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞...');
    await client.query(`
      CREATE UNIQUE INDEX idx_unique_conflicting_repair_per_bike 
        ON maintenance_events (bike_id) 
        WHERE "—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞" IN ('–≤ —Ä–µ–º–æ–Ω—Ç–µ', '–æ–∂–∏–¥–∞–µ—Ç –¥–µ—Ç–∞–ª–µ–π') 
        AND repair_type != 'longterm';
    `);
    
    // 3. –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    console.log('üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏...');
    await client.query(`
      CREATE OR REPLACE FUNCTION check_active_repairs_before_insert()
      RETURNS TRIGGER AS $$
      DECLARE
          conflicting_count INTEGER;
          conflicting_repair_info RECORD;
          should_check_conflicts BOOLEAN;
      BEGIN
          -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
          should_check_conflicts := NOT (
              NEW.repair_type = 'longterm' OR -- –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ä–µ–º–æ–Ω—Ç—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã
              (NEW.repair_type = 'weekly' AND NEW."—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞" = '–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω') -- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –¢–û
          );
          
          -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          IF should_check_conflicts AND NEW."—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞" IN ('–≤ —Ä–µ–º–æ–Ω—Ç–µ', '–æ–∂–∏–¥–∞–µ—Ç –¥–µ—Ç–∞–ª–µ–π') THEN
              
              -- –°—á–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Ä–µ–º–æ–Ω—Ç—ã
              SELECT COUNT(*) INTO conflicting_count
              FROM maintenance_events 
              WHERE bike_id = NEW.bike_id 
              AND "—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞" IN ('–≤ —Ä–µ–º–æ–Ω—Ç–µ', '–æ–∂–∏–¥–∞–µ—Ç –¥–µ—Ç–∞–ª–µ–π')
              AND repair_type != 'longterm' -- –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç
              AND id != COALESCE(NEW.id, 0); -- –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–ø–∏—Å—å –ø—Ä–∏ UPDATE
              
              -- –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ —Ä–µ–º–æ–Ω—Ç—ã
              IF conflicting_count > 0 THEN
                  SELECT 
                      id, 
                      "—Ç–∏–ø_—Ä–µ–º–æ–Ω—Ç–∞", 
                      "—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞",
                      repair_type
                  INTO conflicting_repair_info
                  FROM maintenance_events 
                  WHERE bike_id = NEW.bike_id 
                  AND "—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞" IN ('–≤ —Ä–µ–º–æ–Ω—Ç–µ', '–æ–∂–∏–¥–∞–µ—Ç –¥–µ—Ç–∞–ª–µ–π')
                  AND repair_type != 'longterm'
                  AND id != COALESCE(NEW.id, 0)
                  LIMIT 1;
                  
                  -- –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                  RAISE EXCEPTION 
                      '–ö–û–ù–§–õ–ò–ö–¢_–ê–ö–¢–ò–í–ù–´–•_–†–ï–ú–û–ù–¢–û–í: –í–µ–ª–æ—Å–∏–ø–µ–¥ ID % —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–º–æ–Ω—Ç–µ (ID: %, —Ç–∏–ø: %, —Å—Ç–∞—Ç—É—Å: "%"). –ù–µ–ª—å–∑—è –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π "%" —Ä–µ–º–æ–Ω—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "%" –ø–æ–∫–∞ —Ç–µ–∫—É—â–∏–π –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω.',
                      NEW.bike_id,
                      conflicting_repair_info.id,
                      COALESCE(conflicting_repair_info.repair_type, '–Ω–µ —É–∫–∞–∑–∞–Ω'),
                      conflicting_repair_info."—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞",
                      NEW.repair_type,
                      NEW."—Å—Ç–∞—Ç—É—Å_—Ä–µ–º–æ–Ω—Ç–∞"
                      USING ERRCODE = '23505';
              END IF;
          END IF;
          
          RETURN NEW;
      END;
      $$ LANGUAGE plpgsql;
    `);
    
    // 4. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    await client.query(`
      COMMENT ON INDEX idx_unique_conflicting_repair_per_bike IS 
          '–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–º–æ–Ω—Ç—ã (–∏—Å–∫–ª—é—á–∞–µ—Ç longterm –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ weekly)';
    `);
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π...');
    
    // –¢–µ—Å—Ç: –¥–æ–ª–∂–µ–Ω —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ longterm —Ä–µ–º–æ–Ω—Ç–∞
    console.log('   - –¢–µ—Å—Ç longterm —Ä–µ–º–æ–Ω—Ç–∞...');
    
    // –¢–µ—Å—Ç: –¥–æ–ª–∂–µ–Ω —Ä–∞–∑—Ä–µ—à–∏—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π weekly —Ä–µ–º–æ–Ω—Ç  
    console.log('   - –¢–µ—Å—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ weekly —Ä–µ–º–æ–Ω—Ç–∞...');
    
    console.log('‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
    console.log('');
    console.log('üìã –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞:');
    console.log('   ‚úÖ –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Ä–µ–º–æ–Ω—Ç—ã (longterm) - –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã');
    console.log('   ‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–µ–º–æ–Ω—Ç—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω" - —Ä–∞–∑—Ä–µ—à–µ–Ω—ã');
    console.log('   ‚ùå –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–º–æ–Ω—Ç—ã (–≤ —Ä–µ–º–æ–Ω—Ç–µ, –æ–∂–∏–¥–∞–µ—Ç –¥–µ—Ç–∞–ª–µ–π) –Ω–µ-longterm - –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:', error.message);
    console.error('üîç –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:', error);
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateDatabaseConstraints();