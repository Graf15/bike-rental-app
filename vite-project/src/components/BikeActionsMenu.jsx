import React, { useState, useRef, useEffect } from "react";
import "./Popover.css";

const BikeActionsMenu = ({ bike, onEdit, onCopy, onDelete }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [position, setPosition] = useState({ top: 0, left: 0 });
  const menuRef = useRef(null);
  const triggerRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        menuRef.current &&
        !menuRef.current.contains(event.target) &&
        triggerRef.current &&
        !triggerRef.current.contains(event.target)
      ) {
        setIsOpen(false);
      }
    };

    if (isOpen) {
      document.addEventListener("mousedown", handleClickOutside);
    }

    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [isOpen]);

  // –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –º–µ–Ω—é
  useEffect(() => {
    if (isOpen && triggerRef.current) {
      const rect = triggerRef.current.getBoundingClientRect();
      const menuHeight = 120; // –ø—Ä–∏–º–µ—Ä–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –º–µ–Ω—é
      const menuWidth = 160;

      let top = rect.bottom + 4;
      let left = rect.right - menuWidth; // –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Å–ø—Ä–∞–≤–∞ –æ—Ç –∫–Ω–æ–ø–∫–∏

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –ª–∏ –º–µ–Ω—é –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞
      if (left < 10) {
        left = rect.left;
      }

      if (top + menuHeight > window.innerHeight) {
        top = rect.top - menuHeight - 4;
      }

      setPosition({ top, left });
    }
  }, [isOpen]);

  const handleAction = (action) => {
    switch (action) {
      case "edit":
        onEdit(bike);
        break;
      case "copy":
        onCopy(bike);
        break;
      case "delete":
        if (
          window.confirm(`–£–¥–∞–ª–∏—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥ ${bike.bike_number || bike.model}?`)
        ) {
          onDelete(bike.id);
        }
        break;
    }
    setIsOpen(false);
  };


  return (
    <div className="actions-menu-container">
      <button
        ref={triggerRef}
        className="actions-trigger"
        onClick={() => setIsOpen(!isOpen)}
        title="–î–µ–π—Å—Ç–≤–∏—è"
      >
        ‚ãØ
      </button>

      {isOpen && (
        <div
          ref={menuRef}
          className="actions-menu"
          style={{
            top: `${position.top}px`,
            left: `${position.left}px`
          }}>
          <button className="menu-item" onClick={() => handleAction("edit")}>
            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
          </button>

          <button className="menu-item" onClick={() => handleAction("copy")}>
            üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
          </button>

          <div className="menu-divider"></div>

          <button
            className="menu-item danger"
            onClick={() => handleAction("delete")}
          >
            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
          </button>
        </div>
      )}
    </div>
  );
};

export default BikeActionsMenu;
