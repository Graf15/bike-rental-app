import React, { useState, useRef, useEffect } from "react";
import "./Popover.css";

const BikeActionsMenu = ({ bike, onEdit, onCreateMaintenance, onDelete }) => {
  const [isOpen, setIsOpen] = useState(false);
  const menuRef = useRef(null);
  const triggerRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        menuRef.current &&
        !menuRef.current.contains(event.target) &&
        triggerRef.current &&
        !triggerRef.current.contains(event.target)
      ) {
        setIsOpen(false);
      }
    };

    if (isOpen) {
      document.addEventListener("mousedown", handleClickOutside);
    }

    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [isOpen]);

  const handleAction = (action) => {
    switch (action) {
      case "edit":
        onEdit(bike);
        break;
      case "maintenance":
        onCreateMaintenance(bike.id);
        break;
      case "delete":
        if (
          window.confirm(`–£–¥–∞–ª–∏—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥ ${bike.bike_number || bike.model}?`)
        ) {
          onDelete(bike.id);
        }
        break;
    }
    setIsOpen(false);
  };

  const canCreateMaintenance = ![
    "–≤ —Ä–µ–º–æ–Ω—Ç–µ",
    "–ø—Ä–æ–¥–∞–Ω",
    "—É–∫—Ä–∞–¥–µ–Ω",
    "–Ω–µ–≤–æ–∑–≤—Ä–∞—Ç",
  ].includes(bike.status);

  return (
    <div className="actions-menu-container">
      <button
        ref={triggerRef}
        className="actions-trigger"
        onClick={() => setIsOpen(!isOpen)}
        title="–î–µ–π—Å—Ç–≤–∏—è"
      >
        ‚ãØ
      </button>

      {isOpen && (
        <div ref={menuRef} className="actions-menu">
          <button className="menu-item" onClick={() => handleAction("edit")}>
            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
          </button>

          {canCreateMaintenance && (
            <button
              className="menu-item"
              onClick={() => handleAction("maintenance")}
            >
              üîß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —Ä–µ–º–æ–Ω—Ç
            </button>
          )}

          <div className="menu-divider"></div>

          <button
            className="menu-item danger"
            onClick={() => handleAction("delete")}
          >
            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
          </button>
        </div>
      )}
    </div>
  );
};

export default BikeActionsMenu;
